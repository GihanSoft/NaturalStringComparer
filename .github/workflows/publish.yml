name: publish to nuget
env:
  TESTPROJPATH: NaturalStringComparerTest
on:
  push:
    branches:
      - master # Default release branch
jobs:
  publish:
    name: build, test, pack & publish
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - run: dotnet test {{env.TESTPROJPATH}}
#  publish:
#    name: build, pack & publish
#    runs-on: windows-latest
#    steps:
#      - uses: actions/checkout@v2

      # Install the .NET Core workload
      #- name: Install .NET Core
      #  uses: actions/setup-dotnet@v1
      #  with:
      #  dotnet-version: 5.0.3

      # Publish
#      - name: publish on version change
#        id: publish_nuget
#        uses: rohith/publish-nuget@v2
#        with:
#          # Filepath of the project to be packaged, relative to root of repository
#          PROJECT_FILE_PATH: NaturalStringComparer.Unsafe

          # NuGet package id, used for version detection & defaults to project name
          # PACKAGE_NAME: Core

          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          # VERSION_FILE_PATH: Directory.Build.props

          # Regex pattern to extract version info in a capturing group
          # VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$

          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
          # VERSION_STATIC: 1.0.0

          # Flag to toggle git tagging, enabled by default
          # TAG_COMMIT: true

          # Format of the git tag, [*] gets replaced with actual version
          # TAG_FORMAT: v*

          # API key to authenticate with NuGet server
#          NUGET_KEY: ${{secrets.NUGET_KEY}}

          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          # NUGET_SOURCE: https://api.nuget.org

          # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
          # INCLUDE_SYMBOLS: false
